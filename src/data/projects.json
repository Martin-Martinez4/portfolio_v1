[
    {
        "project_name": "Logor",
        "image_Url": "Logor_Laptop.png",
        "description": "A mock fullstack social media site.  Made using the PERN (Postgres, Express, React, Node) stack",
        "live_site":"https://logor.onrender.com/",
        "repo_site":"https://github.com/Martin-Martinez4/logor",
        "tech": ["React", "NodeJS", "Express", "PostgreSQL"],
        "highlights":[
                {
                    "title": "Frontend",
                    "tagline":"Technologies: React, Typescript",
                    "features": [
                        "HTTP only JWT based Authentication.", 
                        "Create, update, and delete posts.",
                        "Like and respond to other user's posts.",
                        "Follow other users.",
                        "Search for users and tags.",
                        "Edit your profile."
                    ]
                },
                {
                    "title": "Backend",
                    "tagline":"Technologies: Node, Express, Knex, PSQL, Mullter",
                    "features": [
                        "JWT Authentication refresh token sent as a HTTP Only cookie.", 
                        "MVC file structure",
                        "Handle file uploads with Multer.",
                        "Passwords are encrypted before being stored.",
                        "Uses helmetJs and cors middleware to set security headers and only allow requests from the frontend."
                    ]
                }

        ]
    },
    {
        "project_name": "Jottings",
        "image_Url": "Jottings_Projects_View.jpeg",
        "description": "A Kanban-style list making application, created using the MERN (Postgres, Express, React, Node) stack",
        "live_site": "https://jottings-frontend.onrender.com/",
        "repo_site":"https://github.com/Martin-Martinez4/jottings",
        "tech": ["React", "NodeJS", "Express", "MongoDB"],

        "highlights":[
            {
                "title": "Frontend",
                "tagline":"Technologies: React, Redux, Sagas, Typescript",
                "features": [
                    "Create, read, update, and delete tasks.", 
                    "Style tasks using markdown.",
                    "Oragnize tasks inside of categories. Organize categories inside of projects",
                    "Tasks and categories can be reordered via drag and drop or a menu interface.",
                    "JWT Authentication."
                ]
            },
            {
                "title": "Backend",
                "tagline":"Technologies: Node, Express, MongoDB, Mongoose",
                "features": [
                    "MVC file structure",
                    "NoSql MongoDb database.",
                    "Sends error messages to frontend to inform users when an error was encountered and handled.",
                    "Security middleware and cors protection."
                ]
            }
        ]
        
    }
   
]